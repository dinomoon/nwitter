{"version":3,"sources":["fbase.js","components/AuthForm.jsx","routes/Auth.js","components/Nweet.jsx","components/NweetFactory.jsx","routes/Home.js","routes/Profile.js","components/Navigation.jsx","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","e","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","type","placeholder","required","onClick","prev","Auth","Nweet","nweetObj","isOwner","isEditing","setIsEditing","text","newText","setNewText","PATH","id","onDelete","window","confirm","doc","delete","refFromURL","imageUrl","onToggleEdit","onUpdate","update","src","width","NweetFactory","userObj","nweet","setNweet","imageSrc","setImageSrc","imageRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","alt","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","nweetArray","docs","map","data","Profile","refreshUser","displayName","setDisplayName","history","useHistory","getMyNweets","where","get","console","log","updateProfile","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Boolean","currentUser","getFullYear","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.74706db8.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import React, { useState } from 'react';\nimport { authService, firebaseInstance } from '../fbase';\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState('');\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    if (name === 'email') {\n      setEmail(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      if (newAccount) {\n        await authService.createUserWithEmailAndPassword(email, password);\n      } else {\n        await authService.signInWithEmailAndPassword(email, password);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  const onSocialClick = async (e) => {\n    const { name } = e.target;\n    let provider;\n    if (name === 'google') {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === 'github') {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n  return (\n    <section>\n      <div>\n        <form onSubmit={onSubmit}>\n          <input\n            name=\"email\"\n            onChange={onChange}\n            value={email}\n            type=\"text\"\n            placeholder=\"Email\"\n            required\n          />\n          <input\n            name=\"password\"\n            onChange={onChange}\n            value={password}\n            type=\"password\"\n            placeholder=\"Password\"\n            required\n          />\n          <input\n            type=\"submit\"\n            value={newAccount ? 'Create Account' : 'Sign In'}\n          />\n        </form>\n      </div>\n      <div>\n        <button onClick={onSocialClick} name=\"google\">\n          Continue with Google\n        </button>\n        <button onClick={onSocialClick} name=\"github\">\n          Continue with Github\n        </button>\n      </div>\n      <span onClick={toggleAccount}>\n        {newAccount ? 'Sign in' : 'Create Account'}\n      </span>\n      <p>{error}</p>\n    </section>\n  );\n};\n\nexport default AuthForm;\n","import React from 'react';\r\nimport AuthForm from '../components/AuthForm';\r\n\r\nconst Auth = () => {\r\n  return <AuthForm />;\r\n};\r\nexport default Auth;\r\n","import React, { useState } from 'react';\nimport { dbService, storageService } from '../fbase';\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [newText, setNewText] = useState(nweetObj.text);\n  const PATH = `nweets/${nweetObj.id}`;\n\n  const onDelete = async () => {\n    const ok = window.confirm('are you sure delete this nweet?');\n    if (ok) {\n      // Firestore에서 삭제\n      await dbService.doc(PATH).delete();\n      // Storage에서 삭제\n      await storageService.refFromURL(nweetObj.imageUrl).delete();\n    }\n  };\n\n  const onToggleEdit = () => {\n    setIsEditing((prev) => !prev);\n  };\n\n  const onChange = (e) => {\n    setNewText(e.target.value);\n  };\n\n  const onUpdate = async (e) => {\n    e.preventDefault();\n    await dbService.doc(PATH).update({ text: newText });\n    onToggleEdit();\n  };\n\n  return (\n    <>\n      {isEditing ? (\n        <>\n          <form onSubmit={onUpdate}>\n            <input type=\"text\" value={newText} onChange={onChange} />\n            <button type=\"submit\">Update</button>\n          </form>\n          <button type=\"button\" onClick={onToggleEdit}>\n            Cancel\n          </button>\n        </>\n      ) : (\n        <>\n          <li>{nweetObj.text}</li>\n          {nweetObj.imageUrl && <img src={nweetObj.imageUrl} width=\"50px\" />}\n          {isOwner && (\n            <>\n              <button onClick={onToggleEdit}>Edit</button>\n              <button onClick={onDelete}>Delete</button>\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Nweet;\n","import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { dbService, storageService } from '../fbase';\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState('');\n  const [imageSrc, setImageSrc] = useState('');\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    // collection: 폴더, document: 파일\n    // nweets폴더에 nweet 추가\n    let imageUrl = '';\n    if (imageSrc !== '') {\n      const imageRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n      const response = await imageRef.putString(imageSrc, 'data_url');\n      imageUrl = await response.ref.getDownloadURL();\n    }\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      imageUrl,\n    };\n    await dbService.collection('nweets').add(nweetObj);\n    setNweet('');\n    setImageSrc('');\n  };\n  const onChange = (e) => {\n    const { value } = e.target;\n    setNweet(value);\n  };\n\n  const onFileChange = (e) => {\n    const { files } = e.target;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const { result } = finishedEvent.currentTarget;\n      setImageSrc(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n\n  const onClearImage = () => setImageSrc('');\n  return (\n    <section>\n      <form onSubmit={onSubmit}>\n        <input\n          name=\"text\"\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\n        <input type=\"submit\" value=\"Nweet\" />\n      </form>\n      <img src={imageSrc} alt=\"photo\" width=\"50px\" />\n      <button type=\"button\" onClick={onClearImage}>\n        Clear\n      </button>\n    </section>\n  );\n};\n\nexport default NweetFactory;\n","import React, { useEffect, useState } from 'react';\r\nimport Nweet from '../components/Nweet';\r\nimport { dbService } from '../fbase';\r\nimport NweetFactory from '../components/NweetFactory';\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // onSnapshot => database에 변경이 일어나면 실시간으로 알려줌\r\n    dbService\r\n      .collection('nweets')\r\n      .orderBy('createdAt', 'desc')\r\n      .onSnapshot((snapshot) => {\r\n        // 왜 ({}) 이렇게 쓰는지 잘 모르겠음 {} 이렇게만 쓰면 오류남\r\n        const nweetArray = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setNweets(nweetArray);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <NweetFactory userObj={userObj} />\r\n      <section>\r\n        <ul>\r\n          {nweets.map((nweet) => (\r\n            <Nweet\r\n              key={nweet.id}\r\n              nweetObj={nweet}\r\n              isOwner={nweet.creatorId === userObj.uid}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\nexport default Home;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { authService, dbService } from '../fbase';\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n  const [displayName, setDisplayName] = useState(userObj.displayName);\r\n  let history = useHistory();\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push('/');\r\n  };\r\n\r\n  const getMyNweets = async () => {\r\n    const nweets = await dbService\r\n      .collection('nweets')\r\n      .orderBy('createdAt', 'desc')\r\n      .where('creatorId', '==', userObj.uid)\r\n      .get();\r\n    console.log(nweets.docs.map((doc) => doc.data()));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMyNweets();\r\n  }, []);\r\n\r\n  const onChange = (e) => {\r\n    const { value } = e.target;\r\n    setDisplayName(value);\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (userObj.displayName !== displayName) {\r\n      await userObj.updateProfile({\r\n        displayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Display name\"\r\n          onChange={onChange}\r\n          value={displayName}\r\n        />\r\n        <button type=\"submit\">Update Profile</button>\r\n      </form>\r\n      <button onClick={onLogOutClick}>Sign Out</button>\r\n    </>\r\n  );\r\n};\r\nexport default Profile;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navigation = ({ userObj }) => {\r\n  return (\r\n    <nav>\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/\">Home</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/profile\">{userObj.displayName} Profile</Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Auth from '../routes/Auth';\r\nimport Home from '../routes/Home';\r\nimport Profile from '../routes/Profile';\r\nimport Navigation from './Navigation';\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n          </>\r\n        ) : (\r\n          <Route exact path=\"/\">\r\n            <Auth />\r\n          </Route>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from 'react';\r\nimport AppRouter from './Router';\r\nimport { authService } from '../fbase';\r\n\r\nconst App = () => {\r\n  const [init, setInit] = useState(false);\r\n  const [userObj, setUserObj] = useState(null);\r\n  useEffect(() => {\r\n    // 로그인을 했어도 처음에 들어올 때는 firebase가 로드되지 않아서 로그인했다고 확인을 못해서 useEffect와 onAuthStateChanged를 사용함.\r\n    // 그리고 로그아웃했을 때, 바로 알아차릴 수 있게 onAuthStateChanged 사용함\r\n    authService.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        setUserObj({\r\n          displayName: user.displayName,\r\n          uid: user.uid,\r\n          updateProfile: (args) => user.updateProfile(args),\r\n        });\r\n      } else {\r\n        setUserObj(null);\r\n      }\r\n      setInit(true);\r\n    });\r\n  }, []);\r\n\r\n  const refreshUser = () => {\r\n    const user = authService.currentUser;\r\n    setUserObj({\r\n      displayName: user.displayName,\r\n      uid: user.uid,\r\n      updateProfile: (args) => user.updateProfile(args),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {init ? (\r\n        <AppRouter\r\n          isLoggedIn={Boolean(userObj)}\r\n          userObj={userObj}\r\n          refreshUser={refreshUser}\r\n        />\r\n      ) : (\r\n        'Initializing...'\r\n      )}\r\n      <footer>&copy; {new Date().getFullYear()} Nwitter</footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n"],"sourceRoot":""}